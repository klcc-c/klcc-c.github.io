<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux-疑难杂症-01</title>
    <url>/klcc-c.github.io/62db15db.html</url>
    <content><![CDATA[<h2 id="Ubuntu扩容lvm"><a href="#Ubuntu扩容lvm" class="headerlink" title="Ubuntu扩容lvm"></a>Ubuntu扩容lvm</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lvextend -l +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv</span><br><span class="line">resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="测试硬盘灯"><a href="#测试硬盘灯" class="headerlink" title="测试硬盘灯"></a>测试硬盘灯</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">time dd if=/dev/sdb of=/dev/null bs=4k</span><br><span class="line"></span><br><span class="line">for i in `lsblk |grep -w sd[a-z] |grep T  |awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">do</span><br><span class="line">	nohup  dd if=/dev/$i of=/dev/null bs=4k &gt; /tmp/$&#123;i&#125;.log   &amp;</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h2 id="CPU高压测试"><a href="#CPU高压测试" class="headerlink" title="CPU高压测试"></a>CPU高压测试</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for i in `seq 1 30`; do dd if=/dev/zero of=/dev/null &amp; done</span><br><span class="line">ps -ef |grep -v grep|grep &#x27;dd if=/dev/zero of=/dev/null&#x27;|awk &#x27;&#123;print $2&#125;&#x27;|xargs kill -9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">top</span><br><span class="line">Cpu(s):  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line"></span><br><span class="line">id 前面数值是空闲率</span><br></pre></td></tr></table></figure>


<h2 id="ip排序"><a href="#ip排序" class="headerlink" title="ip排序"></a>ip排序</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sort -t . -k 4,4n tt</span><br><span class="line">sort -t<span class="string">&#x27;.&#x27;</span> -k1,1n -k2,2n -k3,3n -k4,4n</span><br></pre></td></tr></table></figure>
<h2 id="mdadm软raid"><a href="#mdadm软raid" class="headerlink" title="mdadm软raid"></a>mdadm软raid</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mdadm -C /dev/md1 -l raid0 -n 2 /dev/nvme2n2 /dev/nvme3n1 </span><br></pre></td></tr></table></figure>
<h2 id="dpkg-error"><a href="#dpkg-error" class="headerlink" title="dpkg-error"></a>dpkg-error</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">dpkg: error processing package</span><br><span class="line"></span><br><span class="line">mv /var/lib/dpkg/info /var/lib/dpkg/info.bak</span><br><span class="line">mkdir /var/lib/dpkg/info</span><br><span class="line">apt update</span><br><span class="line"></span><br><span class="line">apt install sl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mv /var/lib/dpkg/info       /var/lib/dpkg/info.ori</span><br><span class="line">mv /var/lib/dpkg/info.bak   /var/lib/dpkg/info</span><br><span class="line"></span><br><span class="line">apt install lrzsz </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="CPU温度查看"><a href="#CPU温度查看" class="headerlink" title="CPU温度查看"></a>CPU温度查看</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">apt-get install lm-sensors sensors-applet -y</span><br><span class="line">yes| sensors-detect</span><br><span class="line"></span><br><span class="line">cat /sys/class/hwmon/hwmon0/device/hwmon/hwmon0/temp1_input</span><br><span class="line"></span><br><span class="line">sensors</span><br></pre></td></tr></table></figure>
<h2 id="无交互修改密码"><a href="#无交互修改密码" class="headerlink" title="无交互修改密码"></a>无交互修改密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;root:test123.&quot;</span>|chpasswd</span><br></pre></td></tr></table></figure>
<h2 id="开启yum缓存"><a href="#开启yum缓存" class="headerlink" title="开启yum缓存"></a>开启yum缓存</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">修改为1</span></span><br><span class="line">keepcache=1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">默认存放目录在/var/cache</span></span><br></pre></td></tr></table></figure>
<h2 id="find找出的移动或删除"><a href="#find找出的移动或删除" class="headerlink" title="find找出的移动或删除"></a>find找出的移动或删除</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find ./ -name &#x27;means&#x27;|xargs -i mv &#123;&#125;  /k-means/</span><br><span class="line">find ./ -name &#x27;means&#x27;|xargs -i cp &#123;&#125;  /k-means/</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">找出小于90G的文件</span></span><br><span class="line">find ./ -type f   -size -90G</span><br></pre></td></tr></table></figure>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="bash错误修复"><a href="#bash错误修复" class="headerlink" title="-bash错误修复"></a>-bash错误修复</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-bash-4.2$</span><br><span class="line">cp /etc/skel/.bashrc  /home/user/</span><br><span class="line">cp /etc/skel/.bash_profile   /home/user</span><br></pre></td></tr></table></figure>
<h2 id="useradd"><a href="#useradd" class="headerlink" title="useradd"></a>useradd</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">指定目录</span></span><br><span class="line">-d </span><br></pre></td></tr></table></figure>
<h2 id="设置免密"><a href="#设置免密" class="headerlink" title="设置免密"></a>设置免密</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -f ~/.ssh/id_rsa  -P &#x27;&#x27; -q</span><br><span class="line">sshpass -p123456</span><br><span class="line"></span><br><span class="line">ssh-copy-id -f -i ~/.ssh/id_rsa.pub &quot;-o StrictHostKeyChecking=no&quot; 10.0.0.100</span><br></pre></td></tr></table></figure>
<h2 id="rpm管理命令"><a href="#rpm管理命令" class="headerlink" title="rpm管理命令"></a>rpm管理命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -ql  nginx		#列出所有相关目录</span><br><span class="line">rpm -qc  nginx		#列出配置目录</span><br><span class="line">rpm -e	 nginx		#单独卸载</span><br></pre></td></tr></table></figure>
<h2 id="输出格式化整理"><a href="#输出格式化整理" class="headerlink" title="输出格式化整理"></a>输出格式化整理</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">column -t    <span class="comment">#格式化整理</span></span><br></pre></td></tr></table></figure>
<h2 id="自动补全命令"><a href="#自动补全命令" class="headerlink" title="自动补全命令"></a>自动补全命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install bash-completion #自动补全命令</span><br></pre></td></tr></table></figure>
<h2 id="VMware相关"><a href="#VMware相关" class="headerlink" title="VMware相关"></a>VMware相关</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">VM安装linux在docker中装mysql挂起再启动后无法连接解决方法</span></span><br><span class="line">vim /usr/lib/sysctl.d/00-system.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">重启网络服务</span></span><br><span class="line">systemctl restart network</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">查看IPv4转发状态</span></span><br><span class="line">sysctl net.ipv4.ip_forward</span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure>
<h2 id="history设置"><a href="#history设置" class="headerlink" title="history设置"></a>history设置</h2><h3 id="历史命令显示时间"><a href="#历史命令显示时间" class="headerlink" title="历史命令显示时间"></a>历史命令显示时间</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">写入/etc/bashrc或者/etc/profile</span></span><br><span class="line">HISTFILESIZE=4000 #默认保存命令是1000条，这里修改为4000条</span><br><span class="line">HISTSIZE=4000</span><br><span class="line">USER_IP=`who -u am i 2&gt;/dev/null| awk &#x27;&#123;print $NF&#125;&#x27;|sed -e &#x27;s/[()]//g&#x27;` #取得登录客户端的IP</span><br><span class="line">if [ -z $USER_IP ]</span><br><span class="line">then</span><br><span class="line">USER_IP=`hostname`</span><br><span class="line">fi</span><br><span class="line">HISTTIMEFORMAT=&quot;%F %T $USER_IP:`whoami` &quot; #设置新的显示history的格式</span><br><span class="line">export HISTTIMEFORMAT</span><br><span class="line"></span><br><span class="line">. /etc/bashrc</span><br></pre></td></tr></table></figure>
<h3 id="记录用户bash"><a href="#记录用户bash" class="headerlink" title="记录用户bash"></a>记录用户bash</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#####记录用户bash######################################################</span></span><br><span class="line"><span class="built_in">history</span></span><br><span class="line">USER=`whoami`</span><br><span class="line">USER_IP=`who -u am i 2&gt;/dev/null| awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>|sed -e <span class="string">&#x27;s/[()]//g&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$USER_IP</span>&quot;</span> = <span class="string">&quot;&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">USER_IP=`hostname`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /var/<span class="built_in">log</span>/<span class="built_in">history</span> ]; <span class="keyword">then</span></span><br><span class="line">mkdir /var/<span class="built_in">log</span>/<span class="built_in">history</span></span><br><span class="line">chmod 777 /var/<span class="built_in">log</span>/<span class="built_in">history</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /var/<span class="built_in">log</span>/<span class="built_in">history</span>/<span class="variable">$&#123;LOGNAME&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">mkdir /var/<span class="built_in">log</span>/<span class="built_in">history</span>/<span class="variable">$&#123;LOGNAME&#125;</span></span><br><span class="line">chmod 300 /var/<span class="built_in">log</span>/<span class="built_in">history</span>/<span class="variable">$&#123;LOGNAME&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">export</span> HISTSIZE=4096</span><br><span class="line">DT=`date +<span class="string">&quot;%Y%m%d_%H:%M:%S&quot;</span>`</span><br><span class="line"><span class="built_in">export</span> HISTFILE=<span class="string">&quot;/var/log/history/<span class="variable">$&#123;LOGNAME&#125;</span>/<span class="variable">$&#123;USER&#125;</span>@<span class="variable">$&#123;USER_IP&#125;</span>_<span class="variable">$DT</span>&quot;</span></span><br><span class="line">chmod 600 /var/<span class="built_in">log</span>/<span class="built_in">history</span>/<span class="variable">$&#123;LOGNAME&#125;</span>/*<span class="built_in">history</span>* 2&gt;/dev/null</span><br><span class="line"><span class="comment">#######################################################################</span></span><br></pre></td></tr></table></figure>
<h2 id="vim设置"><a href="#vim设置" class="headerlink" title="vim设置"></a>vim设置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">TAB 键为四个空格 永久显示行号</span></span><br><span class="line">vim /etc/vimrc</span><br><span class="line">set ts=4</span><br><span class="line">set sw=4</span><br><span class="line">set number</span><br></pre></td></tr></table></figure>
<h2 id="分区扩容"><a href="#分区扩容" class="headerlink" title="分区扩容"></a>分区扩容</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">umount /data/</span><br><span class="line">fdisk /dev/vdb</span><br><span class="line">d</span><br><span class="line">n</span><br><span class="line">p</span><br><span class="line"></span><br><span class="line">w</span><br><span class="line"></span><br><span class="line">e2fsck -f /dev/vdb1</span><br><span class="line">resize2fs /dev/vdb1 </span><br><span class="line">mount /dev/vdb1 /data/</span><br><span class="line">df -h </span><br><span class="line">cd /data/</span><br><span class="line">ls</span><br></pre></td></tr></table></figure>
<h2 id="随机数生成"><a href="#随机数生成" class="headerlink" title="随机数生成"></a>随机数生成</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openssl rand -base64 3</span><br></pre></td></tr></table></figure>
<h2 id="tcpdump使用"><a href="#tcpdump使用" class="headerlink" title="tcpdump使用"></a>tcpdump使用</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">参数：</span><br><span class="line">-i 指定网卡</span><br><span class="line">-c 指定抓包数量</span><br></pre></td></tr></table></figure>
<h2 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">如果不是北京时间先改成北京时间</span></span><br><span class="line">1.删除自带的localtime</span><br><span class="line">  rm -rf /etc/localtime</span><br><span class="line">2.创建软链接到localtime</span><br><span class="line">ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">同步阿里云</span></span><br><span class="line">ntpdate ntp.aliyun.com</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">写入硬件主板</span></span><br><span class="line">hwclock -w</span><br></pre></td></tr></table></figure>
<h2 id="终端颜色"><a href="#终端颜色" class="headerlink" title="终端颜色"></a>终端颜色</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#写入到环境变量内</span></span><br><span class="line">RED:</span><br><span class="line">PS1=<span class="string">&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;31;40m\]\u\[\033[00;00;40m\]@\[\033[01;31;40m\]\h\[\033[00;31;40m\]:\[\033[00;00;40m\]\w \[\033[01;32;40m\]\$ \[\033[01;37;40m\]&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">YELLOW:</span><br><span class="line">PS1=<span class="string">&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;33;40m\]\u\[\033[00;00;40m\]@\[\033[01;33;40m\]\h\[\033[00;33;40m\]:\[\033[00;00;40m\]\w \[\033[01;32;40m\]\$ \[\033[01;37;40m\]&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="linux格式问题"><a href="#linux格式问题" class="headerlink" title="linux格式问题"></a>linux格式问题</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">检查文件格式，如果带M即是Windows，需要使用dosunix转换</span></span><br><span class="line">cat -v filename</span><br><span class="line">apt install dosunix -y</span><br><span class="line">yum install dosunix -y</span><br><span class="line">dos2unix filename</span><br><span class="line"></span><br><span class="line">参考：</span><br><span class="line">https://www.cnblogs.com/chuyiwang/p/13823551.html</span><br></pre></td></tr></table></figure>
<h2 id="文件分割"><a href="#文件分割" class="headerlink" title="文件分割"></a>文件分割</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">split</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown使用</title>
    <url>/klcc-c.github.io/28cddff3.html</url>
    <content><![CDATA[<h2 id="1、Markdown"><a href="#1、Markdown" class="headerlink" title="1、Markdown"></a>1、Markdown</h2><h3 id="1-1-Typora软件"><a href="#1-1-Typora软件" class="headerlink" title="1.1 Typora软件"></a>1.1 Typora软件</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Typora：最好用的Markdown语法编辑器</span></span><br><span class="line"><span class="comment">#官网</span></span><br><span class="line">https://www.typora.io</span><br><span class="line"><span class="comment">#下载地址</span></span><br><span class="line">https://www.typora.io/<span class="comment">#download</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#源代码模式快捷键</span></span><br><span class="line">Windows系统 ctrl + /</span><br><span class="line">mac command + /</span><br></pre></td></tr></table></figure>
<span id="more"></span>


<h3 id="1-2-Markdown基础语法"><a href="#1-2-Markdown基础语法" class="headerlink" title="1.2 Markdown基础语法"></a>1.2 Markdown基础语法</h3><h4 id="1-2-1-生成目录"><a href="#1-2-1-生成目录" class="headerlink" title="1.2.1 生成目录"></a>1.2.1 生成目录</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#源代码模式下在文档最上方输入以下，就会在文档最上方根据标题生成目录</span></span><br><span class="line">[toc]</span><br></pre></td></tr></table></figure>

<h4 id="1-2-2-标题"><a href="#1-2-2-标题" class="headerlink" title="1.2.2 标题"></a>1.2.2 标题</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一级标题</span></span><br><span class="line"><span class="comment">## 二级标题</span></span><br><span class="line"><span class="comment">### 三级标题</span></span><br><span class="line"><span class="comment">#### 四级标题</span></span><br><span class="line"><span class="comment">##### 五级标题</span></span><br></pre></td></tr></table></figure>
<h4 id="1-2-3-子标题"><a href="#1-2-3-子标题" class="headerlink" title="1.2.3 子标题"></a>1.2.3 子标题</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#无序子标题</span></span><br><span class="line">* 子标题<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#有序子标题</span></span><br><span class="line"><span class="number">1.</span> 子标题<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#源代码模式下上一级与下一级多敲三个空格即可</span></span><br><span class="line"><span class="comment">#Typora内使用Tab键即可</span></span><br></pre></td></tr></table></figure>
<h4 id="1-2-4-代码块"><a href="#1-2-4-代码块" class="headerlink" title="1.2.4 代码块"></a>1.2.4 代码块</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&quot;\&quot; 是注释</span></span><br><span class="line">\```源码类型</span><br><span class="line">\```</span><br></pre></td></tr></table></figure>


<h4 id="1-2-5-制表"><a href="#1-2-5-制表" class="headerlink" title="1.2.5 制表"></a>1.2.5 制表</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用管道符分割,Typora内可以使用如下</span></span><br><span class="line">|user|passwd|hostname|</span><br><span class="line"></span><br><span class="line"><span class="comment">#源码如下</span></span><br><span class="line">| user | passwd | hostname |</span><br><span class="line">| ---- | :------: | -------- |</span><br><span class="line">|root|<span class="number">123456</span>|test1|</span><br><span class="line"><span class="comment">#::这两个代表着表格内文字整体居中</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="1-2-6-超链接"><a href="#1-2-6-超链接" class="headerlink" title="1.2.6 超链接"></a>1.2.6 超链接</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文本超链接</span></span><br><span class="line">[文本](超链接) <span class="comment">#eg: [测试](www.baidu.com)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#图片超链接，插入图片</span></span><br><span class="line">![图片](超链接) <span class="comment">#此处超链接可以是本地图片地址或者图片的url</span></span><br></pre></td></tr></table></figure>

<h4 id="1-2-7-单选框"><a href="#1-2-7-单选框" class="headerlink" title="1.2.7 单选框"></a>1.2.7 单选框</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">- [ ] 单选框 <span class="comment">#创建完成后可点</span></span><br></pre></td></tr></table></figure>

<h4 id="1-2-8-字体"><a href="#1-2-8-字体" class="headerlink" title="1.2.8 字体"></a>1.2.8 字体</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">**加粗**</span><br><span class="line">*斜体*</span><br><span class="line">~~删除线~~</span><br><span class="line">~~***倾斜加粗删除线***~~</span><br></pre></td></tr></table></figure>

<h2 id="2、编程与编程语言"><a href="#2、编程与编程语言" class="headerlink" title="2、编程与编程语言"></a>2、编程与编程语言</h2><h3 id="2-1-语言"><a href="#2-1-语言" class="headerlink" title="2.1 语言"></a>2.1 语言</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">中文、日文、韩文等等都是人类的语言，语言是为了人与人沟通的媒介</span><br></pre></td></tr></table></figure>



<h3 id="2-2-编程语言"><a href="#2-2-编程语言" class="headerlink" title="2.2 编程语言"></a>2.2 编程语言</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">因此编程语言就是人与计算机之间沟通交流的媒介,为了让计算机代替人力无休止的干活</span><br></pre></td></tr></table></figure>



<h3 id="2-3-编程"><a href="#2-3-编程" class="headerlink" title="2.3 编程"></a>2.3 编程</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">编程是程序员使用计算机能够读懂的语言<span class="string">&quot;将自己的思维逻辑和想法&quot;</span>写下来的过程</span><br></pre></td></tr></table></figure>



<h2 id="3、计算机基础"><a href="#3、计算机基础" class="headerlink" title="3、计算机基础"></a>3、计算机基础</h2><h3 id="3-1-计算机五大组成部分"><a href="#3-1-计算机五大组成部分" class="headerlink" title="3.1 计算机五大组成部分"></a>3.1 计算机五大组成部分</h3><h4 id="3-1-1-控制器"><a href="#3-1-1-控制器" class="headerlink" title="3.1.1 控制器"></a>3.1.1 控制器</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">控制计算机各个硬件的工作</span><br><span class="line"><span class="comment">#相当于人的大脑</span></span><br></pre></td></tr></table></figure>



<h4 id="3-1-2-运算器"><a href="#3-1-2-运算器" class="headerlink" title="3.1.2 运算器"></a>3.1.2 运算器</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">控制数学运算与逻辑运算</span><br><span class="line">  数学运算:数字相关的运算</span><br><span class="line">  逻辑运算:根据条件判断是否可行</span><br><span class="line"><span class="comment">#相当于人的大脑</span></span><br></pre></td></tr></table></figure>



<h4 id="3-1-3-存储设备"><a href="#3-1-3-存储设备" class="headerlink" title="3.1.3 存储设备"></a>3.1.3 存储设备</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">内存:存取数据的速度很快，但是它是基于电工作的，断电后数据会立刻丢失，不能永久保存数据。<span class="comment">#eg:内存条,相当于人的短期记忆，</span></span><br><span class="line">  </span><br><span class="line">外存:存取数据的速度较慢，但是它断电之后数据也不受影响 可以永久保存数据。<span class="comment">#eg:磁带,磁盘,u盘,硬盘,相当于人的长期记忆</span></span><br></pre></td></tr></table></figure>



<h4 id="3-1-4-输入设备"><a href="#3-1-4-输入设备" class="headerlink" title="3.1.4 输入设备"></a>3.1.4 输入设备</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">作用:将外界的数据传递给计算机</span><br><span class="line"><span class="comment">#eg:鼠标,键盘,麦克风</span></span><br><span class="line"><span class="comment">#相当于人的眼睛,嘴巴,耳朵</span></span><br></pre></td></tr></table></figure>



<h4 id="3-1-5-输出设备"><a href="#3-1-5-输出设备" class="headerlink" title="3.1.5 输出设备"></a>3.1.5 输出设备</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">作用:将计算机内部的数据传递给外部</span><br><span class="line"><span class="comment">#eg:显示屏,音响,打印机</span></span><br><span class="line"><span class="comment">#相当于人的嘴巴...</span></span><br></pre></td></tr></table></figure>





<h3 id="3-2-计算机三大核心硬件"><a href="#3-2-计算机三大核心硬件" class="headerlink" title="3.2 计算机三大核心硬件"></a>3.2 计算机三大核心硬件</h3><h4 id="3-2-1-中央处理器"><a href="#3-2-1-中央处理器" class="headerlink" title="3.2.1 中央处理器"></a>3.2.1 中央处理器</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">CPU去内存中取程序的指令并运行，相当于控制器+运算器</span><br></pre></td></tr></table></figure>



<h4 id="3-2-2-内存"><a href="#3-2-2-内存" class="headerlink" title="3.2.2 内存"></a>3.2.2 内存</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">程序要想运行必须先存在于内存中</span><br></pre></td></tr></table></figure>



<h4 id="3-2-3-硬盘"><a href="#3-2-3-硬盘" class="headerlink" title="3.2.3 硬盘"></a>3.2.3 硬盘</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">永久保存相应数据</span><br></pre></td></tr></table></figure>



<h3 id="3-3-操作系统"><a href="#3-3-操作系统" class="headerlink" title="3.3 操作系统"></a>3.3 操作系统</h3><h4 id="3-3-1-概念"><a href="#3-3-1-概念" class="headerlink" title="3.3.1 概念"></a>3.3.1 概念</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">作用:协调、管理、控制计算机各个硬件的工作</span><br><span class="line">计算机硬件--&gt;操作系统--&gt;应用程序</span><br><span class="line">我们日常生活中所使用的 程序员所编写的程序都必须基于操作系统之上</span><br></pre></td></tr></table></figure>



<h4 id="3-3-2-分类"><a href="#3-3-2-分类" class="headerlink" title="3.3.2 分类"></a>3.3.2 分类</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">PC端：</span><br><span class="line">windows</span><br><span class="line">linux</span><br><span class="line">macos</span><br><span class="line"></span><br><span class="line">移动端：</span><br><span class="line">安卓</span><br><span class="line">ios</span><br><span class="line">鸿蒙</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>python基础-01</title>
    <url>/klcc-c.github.io/daf175dd.html</url>
    <content><![CDATA[<h2 id="1、Pycharm基本使用"><a href="#1、Pycharm基本使用" class="headerlink" title="1、Pycharm基本使用"></a>1、Pycharm基本使用</h2><h3 id="1-1-新建项目"><a href="#1-1-新建项目" class="headerlink" title="1.1 新建项目"></a>1.1 新建项目</h3><span id="more"></span>

<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/Fg5CT2.png" alt="Fg5CT2"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/koHl29.png" alt="koHl29"></p>
<h3 id="1-2-主题设置"><a href="#1-2-主题设置" class="headerlink" title="1.2 主题设置"></a>1.2 主题设置</h3><p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/Yr8VSa.png" alt="Yr8VSa"></p>
<h3 id="1-3-Pycharm切换解释器"><a href="#1-3-Pycharm切换解释器" class="headerlink" title="1.3 Pycharm切换解释器"></a>1.3 Pycharm切换解释器</h3><p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/xy5MbY.png" alt="xy5MbY"></p>
<h3 id="1-4-调整字体"><a href="#1-4-调整字体" class="headerlink" title="1.4 调整字体"></a>1.4 调整字体</h3><p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/kBm63I.png" alt="kBm63I"></p>
<h3 id="1-5-运行python脚本文件"><a href="#1-5-运行python脚本文件" class="headerlink" title="1.5 运行python脚本文件"></a>1.5 运行python脚本文件</h3><p>鼠标右键到项目目录之后可以创建文件夹与文件，在代码空白处右键选择如下的Run即可运行python脚本</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/dI0FCk.png" alt="dI0FCk"></p>
<h2 id="2、Python的注释语法"><a href="#2、Python的注释语法" class="headerlink" title="2、Python的注释语法"></a>2、Python的注释语法</h2><h3 id="2-1-注释"><a href="#2-1-注释" class="headerlink" title="2.1 注释"></a>2.1 注释</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;注释是代码之母&quot;&quot;&quot;</span></span><br><span class="line">注释：对代码的解释和说明，目的是为了让人们能够轻松的了解代码，注释不参与持续的运行</span><br></pre></td></tr></table></figure>

<h3 id="2-2-使用注释"><a href="#2-2-使用注释" class="headerlink" title="2.2 使用注释"></a>2.2 使用注释</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">方式一:使用井号</span><br><span class="line">  <span class="comment"># 这是一行注释</span></span><br><span class="line">方式二:使用三引号(单引号和双引号)</span><br><span class="line">  <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">  这是多行注释</span></span><br><span class="line"><span class="string">  这是多行注释</span></span><br><span class="line"><span class="string">  &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p>2.3 Pycharm注释快捷键</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Windows： ctrl + ?</span><br><span class="line">Mac:      command + ?</span><br><span class="line">选中多行代码之后执行快捷键就会被一起注释</span><br></pre></td></tr></table></figure>

<h2 id="3、变量"><a href="#3、变量" class="headerlink" title="3、变量"></a>3、变量</h2><h3 id="3-1-什么是变量"><a href="#3-1-什么是变量" class="headerlink" title="3.1 什么是变量"></a>3.1 什么是变量</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">变量即变化的量，用于记录事物的某种状态，是模仿人类事物记忆能力</span><br></pre></td></tr></table></figure>

<h3 id="3-2-使用变量"><a href="#3-2-使用变量" class="headerlink" title="3.2 使用变量"></a>3.2 使用变量</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">日常生活种:</span><br><span class="line">  姓名:xxx</span><br><span class="line">  年龄:<span class="number">28</span></span><br><span class="line">  爱好:学习</span><br><span class="line">程序中:</span><br><span class="line">  username = <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">  age      = <span class="number">18</span></span><br><span class="line">  hobby    = <span class="string">&#x27;music&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3-语法格式"><a href="#3-3-语法格式" class="headerlink" title="3.3 语法格式"></a>3.3 语法格式</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">username = <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">变量名  赋值号 变量值</span><br></pre></td></tr></table></figure>

<h3 id="3-4-变量三要素"><a href="#3-4-变量三要素" class="headerlink" title="3.4 变量三要素"></a>3.4 变量三要素</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>变量的值 </span><br><span class="line"><span class="number">2.</span>变量的内存地址</span><br><span class="line"><span class="number">3.</span>变量的数据类型</span><br><span class="line"></span><br><span class="line">name = <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(name)         <span class="comment"># 变量值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(name))     <span class="comment"># 返回一串数字 相当于是内存地址编号</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name))   <span class="comment"># 返回数据类型  &lt;class &#x27;str&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/I6iPWT.png" alt="I6iPWT"></p>
<h3 id="3-5-底层原理"><a href="#3-5-底层原理" class="headerlink" title="3.5 底层原理"></a>3.5 底层原理</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># eg:</span></span><br><span class="line">  age = <span class="number">18</span></span><br><span class="line">  </span><br><span class="line">  <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">  遇到赋值号先看符号右边，再看到左边</span></span><br><span class="line"><span class="string">  1.在内存中申请到了一块内存空间来存储18这个数字</span></span><br><span class="line"><span class="string">  2.将18所在的内存空间地址指向绑定给变量名age</span></span><br><span class="line"><span class="string">  3.后续如果要访问18可以直接通过访问变量age</span></span><br><span class="line"><span class="string">  &#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/gyg2Ck.png" alt="gyg2Ck"></p>
<h3 id="3-6-Python底层优化"><a href="#3-6-Python底层优化" class="headerlink" title="3.6 Python底层优化"></a>3.6 Python底层优化</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">当值数据量很小的时候 如果有多个变量名需要使用 那么会指向同一块地址</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">一个变量名只能指向一个内存地址</span></span><br><span class="line"><span class="string">一个内存地址可以有多个变量名指向</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="4、常量"><a href="#4、常量" class="headerlink" title="4、常量"></a>4、常量</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">常量:主要记录一些不变的状态</span><br><span class="line">  </span><br><span class="line">在python中没有真正意义上的常量 我们墨守成规的将全大写的变量看成是常量</span><br><span class="line">	HOST = <span class="string">&#x27;127.0.0.1&#x27;</span>  <span class="comment"># 一般情况下在配置文件中使用较多</span></span><br><span class="line">在其他编程语言中是存在真正意义上的常量 定义了就无法修改</span><br><span class="line"><span class="comment"># JavaScript代码</span></span><br><span class="line">	const pi = <span class="number">3.14</span>  <span class="comment"># 定义常量</span></span><br><span class="line">    pi = <span class="number">4</span>  <span class="comment"># 不支持修改</span></span><br><span class="line"><span class="comment"># golang常量声明</span></span><br><span class="line">const MAX = <span class="number">1024</span></span><br><span class="line">const (</span><br><span class="line">  a = iota</span><br><span class="line">  b = iota</span><br><span class="line">  c = iota</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="5、垃圾回收机制"><a href="#5、垃圾回收机制" class="headerlink" title="5、垃圾回收机制"></a>5、垃圾回收机制</h2><h3 id="5-1-垃圾数据的定义"><a href="#5-1-垃圾数据的定义" class="headerlink" title="5.1 垃圾数据的定义"></a>5.1 垃圾数据的定义</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">在内存中没有任何变量名指向的数据</span><br></pre></td></tr></table></figure>

<h3 id="5-2-回收方案"><a href="#5-2-回收方案" class="headerlink" title="5.2 回收方案"></a>5.2 回收方案</h3><h4 id="5-2-1-引用记数"><a href="#5-2-1-引用记数" class="headerlink" title="5.2.1 引用记数"></a>5.2.1 引用记数</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">内存中变量值身上有几个变量名绑定引用计数就是几,只要不为<span class="number">0</span>就不是垃圾</span><br></pre></td></tr></table></figure>

<h4 id="5-2-2-标记清除"><a href="#5-2-2-标记清除" class="headerlink" title="5.2.2 标记清除"></a>5.2.2 标记清除</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">当内存即将沾满的时候,python会自动暂停程序的执行,从头到尾将内存中数据进行扫描,并打上标记,之后一次性清除掉标记的数据</span><br></pre></td></tr></table></figure>

<h4 id="5-2-3-分代回收"><a href="#5-2-3-分代回收" class="headerlink" title="5.2.3 分代回收"></a>5.2.3 分代回收</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">会将数据的监管分为三个层次,随着层级的下降监督的频率降低</span><br><span class="line">用时间换空间</span><br></pre></td></tr></table></figure>

<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/CR2fkx.png" alt="CR2fkx"></p>
<h2 id="6、数据类型"><a href="#6、数据类型" class="headerlink" title="6、数据类型"></a>6、数据类型</h2><h3 id="6-1-什么是数据类型"><a href="#6-1-什么是数据类型" class="headerlink" title="6.1 什么是数据类型"></a>6.1 什么是数据类型</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">存储数据的方式和表现形式有很多种，例如文本文件，视频文件，音频文件......</span><br></pre></td></tr></table></figure>

<h3 id="6-2-int类型"><a href="#6-2-int类型" class="headerlink" title="6.2 int类型"></a>6.2 int类型</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># int类型:整数类型,长度与其他语言对比无限</span></span><br><span class="line">作用:可以记录人的年龄，人数......</span><br><span class="line">eg:</span><br><span class="line">  age = <span class="number">18</span>  <span class="comment"># 直接些整数就是整型</span></span><br></pre></td></tr></table></figure>

<h3 id="6-3-float类型"><a href="#6-3-float类型" class="headerlink" title="6.3 float类型"></a>6.3 float类型</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># float可以理解为小数</span></span><br><span class="line">作用:记录人的体重，薪资......</span><br><span class="line">eg:</span><br><span class="line">  salary = <span class="number">3.14</span>  <span class="comment"># 直接写小数就是浮点型</span></span><br></pre></td></tr></table></figure>

<h2 id="7、代码规范"><a href="#7、代码规范" class="headerlink" title="7、代码规范"></a>7、代码规范</h2><h3 id="7-1-注释规范"><a href="#7-1-注释规范" class="headerlink" title="7.1 注释规范"></a>7.1 注释规范</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1.警号与注释文本之间一定要有一个空格</span></span><br><span class="line"><span class="string">2.如果单行注释跟在了一行代码的后面 需要先空两个再写</span></span><br><span class="line"><span class="string">pycharm也提供自动化格式代码的功能 </span></span><br><span class="line"><span class="string">code </span></span><br><span class="line"><span class="string">reformat code</span></span><br><span class="line"><span class="string">Windows快捷键：ctrl + alt + l</span></span><br><span class="line"><span class="string">Mac快捷键： option + command + L </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">python代码编写规范  &gt;&gt;&gt;: PEP8规范</span><br><span class="line"><span class="comment"># 如何快速掌握 借助于pycharm的自动化提示 前后对比 每天记忆</span></span><br></pre></td></tr></table></figure>



<h3 id="7-2-命名规范"><a href="#7-2-命名规范" class="headerlink" title="7.2 命名规范"></a>7.2 命名规范</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命名规范</span></span><br><span class="line">	  <span class="number">1.</span>变量名只能由数字、字母、下划线任意组合</span><br><span class="line">    	user@name(不对)、_(可以)、pwd_123_aaa(可以)</span><br><span class="line">    <span class="number">2.</span>变量名不能以数字开头，下划线建议不要开头因为有特殊含义</span><br><span class="line">    <span class="number">3.</span>变量名不能与关键字冲突</span><br><span class="line">    <span class="number">4.</span>变量名的命名一定要做到见名知意(重要)</span><br><span class="line">    	<span class="string">&#x27;&#x27;&#x27;变量名见名知意是核心 无论变量多长&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 命名风格</span></span><br><span class="line">	<span class="number">1.</span>驼峰体  </span><br><span class="line">    	大驼峰  <span class="comment"># 所有单词首字母大写</span></span><br><span class="line">        	UserNameFromDb</span><br><span class="line">        小驼峰  <span class="comment"># 第一首字母小写其余首字母大写</span></span><br><span class="line">        	userNameFromDB</span><br><span class="line">        <span class="string">&quot;&quot;&quot;JavaScript推荐使用驼峰体&quot;&quot;&quot;</span></span><br><span class="line">    <span class="number">2.</span>下划线  <span class="comment"># 单词与单词之间下划线隔开</span></span><br><span class="line">    	user_name_from_db </span><br><span class="line">        <span class="string">&quot;&quot;&quot;python推荐使用下划线&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 好东西！！！输入中文即可给出对应英文命名</span></span><br><span class="line">https://unbug.github.io/codelf/</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python解释器与Pycharm</title>
    <url>/klcc-c.github.io/c1fd5357.html</url>
    <content><![CDATA[<h1 id="1、Python解释器安装"><a href="#1、Python解释器安装" class="headerlink" title="1、Python解释器安装"></a>1、Python解释器安装</h1><h2 id="1-1-Python下载"><a href="#1-1-Python下载" class="headerlink" title="1.1 Python下载"></a>1.1 Python下载</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#官网，下载速度慢</span></span><br><span class="line">https://www.python.org</span><br><span class="line"></span><br><span class="line"><span class="comment">#国内下载</span></span><br><span class="line">https://npm.taobao.org/mirrors/python</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<ol>
<li>找到下载位置并点击</li>
</ol>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/NoHxoM.png" alt="NoHxoM"></p>
<ol start="2">
<li><p>选择对应的版本以及操作系统进行下载</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/enrDoA.png" alt="enrDoA"></p>
</li>
</ol>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/Se7Gmo.png" alt="Se7Gmo"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/J0BKed.png" alt="J0BKed"></p>
<h2 id="1-2-Python安装"><a href="#1-2-Python安装" class="headerlink" title="1.2 Python安装"></a>1.2 Python安装</h2><h3 id="1-2-1-Mac安装"><a href="#1-2-1-Mac安装" class="headerlink" title="1.2.1 Mac安装"></a>1.2.1 Mac安装</h3><p>根据提示下载的安装包如下：</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/LdenzD.png" alt="LdenzD"></p>
<p>双击打开之后直接继续即可</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/Dl1wXm.png" alt="Dl1wXm"></p>
<h3 id="1-2-2-Windows安装"><a href="#1-2-2-Windows安装" class="headerlink" title="1.2.2 Windows安装"></a>1.2.2 Windows安装</h3><p>第一个红框选择自定义安装，可选择python安装路径。第二个红框是自动配置环境变量</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/tjeIhK.png" alt="tjeIhK"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/XhyZ3E.png" alt="XhyZ3E"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/3YqU60.png" alt="d"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/Ja6EtC.png" alt="Ja6EtC"></p>
<p>环境变量设置</p>
<p>此时还无法直接使用python</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/A717xq.png" alt="A717xq"></p>
<p>此电脑右键，选择属性，选择高级系统设置，选择环境变量，选择Path，编辑，再变量最后使用英文状态下的 ; 进行结尾，将Python安装的路径复制出来，粘贴到最后然后选择确定。最后新打开命令提示符输入python即可</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/dhoaNQ.png" alt="dhoaNQ"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/DGvRCE.png" alt="DGvRCE"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/KZmLEE.png" alt="KZmLEE"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/aOntw1.png" alt="aOntw1"></p>
<h3 id="1-2-3-多版本"><a href="#1-2-3-多版本" class="headerlink" title="1.2.3 多版本"></a>1.2.3 多版本</h3><ol>
<li><p>Mac系统下</p>
<p>可以使用pyenv进行多版本控制</p>
</li>
<li><p>Windows</p>
</li>
</ol>
<p>python2.7安装：</p>
<p>下载加速地址：<a href="https://npm.taobao.org/mirrors/python">https://npm.taobao.org/mirrors/python</a></p>
<p>下载完成后继续将Python2.7的路径放入到Path的最后，将对应版本的exe改名，最后在终端输入对应版本</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/cBrS1B.png" alt="cBrS1B">     </p>
<p>更对应版本的名称</p>
<p>此时就可以多版本试用</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/Ciyvlb.png" alt="Ciyvlb"></p>
<h1 id="2、Pycharm安装"><a href="#2、Pycharm安装" class="headerlink" title="2、Pycharm安装"></a>2、Pycharm安装</h1><ol>
<li>下载安装</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#官网</span></span><br><span class="line">https://www.jetbrains.com/pycharm/download/</span><br></pre></td></tr></table></figure>



<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/aJKd3J.png" alt="aJKd3J"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/dag3R6.png" alt="dag3R6"></p>
<p>下载完成后下一步下一步安装即可</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/BJbgci.png" alt="BJbgci"></p>
<ol start="2">
<li><p>2021.3版本破解</p>
<p>无限期试用方法参考：<a href="https://www.macwk.com/article/jetbrains-crack">https://www.macwk.com/article/jetbrains-crack</a></p>
</li>
</ol>
<p>最新版本试用需要登录账号才可以</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/3u8VVR.png" alt="3u8VVR"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/ddVmoo.png" alt="ddVmoo"></p>
<p>破解：</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/ZEJ0Od.png" alt="ZEJ0Od"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/3kEn2a.png" alt="3kEn2a"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/kdhtq0.png" alt="kdhtq0"></p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/mKW9Nt.png" alt="mKW9Nt"></p>
<p>![image-20211101164144658](/Users/zhijinliu/Library/Application Support/typora-user-images/image-20211101164144658.png)</p>
<p>使用插件即可重置试用时间</p>
<p><img src="https://klcc-img-1251900471.cos.ap-chengdu.myqcloud.com/img/p1l5h0.png" alt="p1l5h0"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>pycharm</tag>
      </tags>
  </entry>
  <entry>
    <title>python基础-02</title>
    <url>/klcc-c.github.io/43f82467.html</url>
    <content><![CDATA[<h2 id="1、数据类型"><a href="#1、数据类型" class="headerlink" title="1、数据类型"></a>1、数据类型</h2><h3 id="1-1-字符串str"><a href="#1-1-字符串str" class="headerlink" title="1.1 字符串str"></a>1.1 字符串str</h3><span id="more"></span>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">作用:主要记录描述性质的数据，例如姓名、地址、邮箱......</span><br><span class="line"></span><br><span class="line">定义:</span><br><span class="line">  方式<span class="number">1</span>:使用单引号,eg:</span><br><span class="line">      name = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">  方式<span class="number">2</span>:使用双引号,eg:</span><br><span class="line">      name = <span class="string">&quot;hello&quot;</span></span><br><span class="line">  方式<span class="number">3</span>:使用三引号,eg:</span><br><span class="line">      name = <span class="string">&#x27;&#x27;&#x27;hello&#x27;&#x27;&#x27;</span></span><br><span class="line">  方式<span class="number">4</span>:使用三引号,eg:</span><br><span class="line">      name = <span class="string">&quot;&quot;&quot;hello&quot;&quot;&quot;</span></span><br><span class="line">      </span><br><span class="line">  类型查看:</span><br><span class="line">    str_a = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">		<span class="built_in">print</span>(<span class="built_in">type</span>(str_a))</span><br><span class="line">    结果:&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">      </span></span><br><span class="line"><span class="class">  三引号说明:</span></span><br><span class="line">    <span class="number">1.</span>两个三引号都支持换行</span><br><span class="line">    <span class="number">2.</span>定义字符的多种方式原因</span><br><span class="line">    	<span class="built_in">print</span>(<span class="string">&#x27;鲁迅说：&#x27;</span>我没说过这句话<span class="string">&#x27;&#x27;</span>)  <span class="comment"># 这语句就是错误的了</span></span><br><span class="line">			<span class="built_in">print</span>(<span class="string">&#x27;鲁迅说：&quot;我没说过这句话&quot;&#x27;</span>)  <span class="comment"># 这条语句就正确了</span></span><br><span class="line">    <span class="number">3.</span><span class="built_in">print</span>(<span class="string">&#x27;It\&#x27;s a dog&#x27;</span>)  <span class="comment"># 可以用\ 进行转义为本身含义</span></span><br></pre></td></tr></table></figure>

<h3 id="1-2-列表list"><a href="#1-2-列表list" class="headerlink" title="1.2 列表list"></a>1.2 列表list</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">作用:能够存储多个数据并且可以方便的取出任意个数</span><br><span class="line">特征:中括号括起来,内部可以存放多个元素,元素与元素之间用逗号隔开,元素可以是任意类型</span><br><span class="line">eg:</span><br><span class="line">  first_list = [<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>, <span class="number">123</span>, <span class="number">12344</span>, [<span class="string">&quot;test&quot;</span>, <span class="number">555</span>, [<span class="string">&quot;two&quot;</span>, <span class="string">&quot;results&quot;</span>, <span class="number">777</span>]]]</span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">type</span>(first_list))    <span class="comment"># 结果:&lt;class &#x27;list&#x27;&gt;</span></span><br><span class="line">索引取值(从<span class="number">0</span>开始的连续数字)</span><br><span class="line">  <span class="built_in">print</span>(first_list[<span class="number">1</span>])  <span class="comment"># world</span></span><br><span class="line">  <span class="built_in">print</span>(first_list[<span class="number">3</span>])  <span class="comment"># 12344</span></span><br><span class="line">  </span><br><span class="line">取值练习:</span><br><span class="line">  取例中的results</span><br><span class="line">  方法一:逐一提取</span><br><span class="line">    l1 = first_list[<span class="number">4</span>]  <span class="comment"># [&#x27;test&#x27;, 555, [&#x27;two&#x27;, &#x27;results&#x27;, 777]]</span></span><br><span class="line">    l2 = l1[<span class="number">2</span>]  <span class="comment"># [&#x27;two&#x27;, &#x27;results&#x27;, 777]</span></span><br><span class="line">    l3 = l2[<span class="number">1</span>]  <span class="comment"># results</span></span><br><span class="line">    <span class="built_in">print</span>(l3)</span><br><span class="line">  方法二:熟悉之后一步到位</span><br><span class="line">    <span class="built_in">print</span>(first_list[<span class="number">4</span>][<span class="number">2</span>][<span class="number">1</span>])</span><br></pre></td></tr></table></figure>

<h3 id="1-3-字典dict"><a href="#1-3-字典dict" class="headerlink" title="1.3 字典dict"></a>1.3 字典dict</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">作用:能够更加精准的存储数据</span><br><span class="line">定义:大括号括起来,内存可以存放多个元素,元素与元素之间逗号隔开,元素是K:V键值对的形式</span><br><span class="line">    K是对数据的描述,V是所存的数据</span><br><span class="line">eg:</span><br><span class="line">  first_dict = &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;passwd&#x27;</span>: <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;hostname&#x27;</span>: <span class="string">&#x27;node1&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">type</span>(first_dict))  <span class="comment"># &lt;class &#x27;dict&#x27;&gt;</span></span><br><span class="line">取值:</span><br><span class="line">  <span class="number">1.</span>字典无法索取值</span><br><span class="line">  <span class="number">2.</span>字典取值需要借助K,eg:</span><br><span class="line">    <span class="built_in">print</span>(first_dict[<span class="string">&#x27;username&#x27;</span>])  <span class="comment"># root</span></span><br><span class="line">    </span><br><span class="line">取值练习:</span><br><span class="line">info = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;addr&#x27;</span>: [<span class="string">&#x27;安徽&#x27;</span>, <span class="string">&#x27;芜湖&#x27;</span>, &#123;<span class="string">&#x27;国家&#x27;</span>: <span class="string">&#x27;中国&#x27;</span>, <span class="string">&#x27;编号&#x27;</span>: [<span class="number">11</span>, <span class="number">22</span>, <span class="string">&#x27;中国最牛逼&#x27;</span>]&#125;]&#125;</span><br><span class="line">方式一:</span><br><span class="line">    d1 = info[<span class="string">&#x27;addr&#x27;</span>]  <span class="comment"># &#x27;安徽&#x27;, &#x27;芜湖&#x27;, &#123;&#x27;国家&#x27;: &#x27;中国&#x27;, &#x27;编号&#x27;: [11, 22, &#x27;中国最牛逼&#x27;]&#125;]</span></span><br><span class="line">  	d2 = d1[<span class="number">2</span>]  <span class="comment"># &#123;&#x27;国家&#x27;: &#x27;中国&#x27;, &#x27;编号&#x27;: [11, 22, &#x27;中国最牛逼&#x27;]&#125;</span></span><br><span class="line">    d3 = d2[<span class="string">&#x27;编号&#x27;</span>]  <span class="comment"># [11, 22, &#x27;中国最牛逼&#x27;]</span></span><br><span class="line">    d4 = d3[<span class="number">2</span>]  <span class="comment"># 中国最牛逼</span></span><br><span class="line">方式二:</span><br><span class="line">		<span class="built_in">print</span>(info[<span class="string">&#x27;addr&#x27;</span>][<span class="number">2</span>][<span class="string">&#x27;编号&#x27;</span>][<span class="number">2</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="1-4-布尔值-bool"><a href="#1-4-布尔值-bool" class="headerlink" title="1.4 布尔值 bool"></a>1.4 布尔值 bool</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">作用:用于判断事物的对错</span><br><span class="line">定义:</span><br><span class="line">  <span class="literal">True</span>  <span class="comment"># 正确的</span></span><br><span class="line">  <span class="literal">False</span>  <span class="comment"># 错误的</span></span><br><span class="line">  <span class="comment">#ps: 首字母大写</span></span><br><span class="line">  </span><br><span class="line">布尔变量的命名一般采用<span class="keyword">is</span>开头,eg:</span><br><span class="line">  is_right = <span class="literal">True</span></span><br><span class="line">  is_delete = <span class="literal">False</span></span><br><span class="line">  </span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">type</span>(is_right))  <span class="comment"># &lt;class &#x27;bool&#x27;&gt;</span></span><br><span class="line">数据类型转换为布尔值的注意点:</span><br><span class="line">  <span class="number">0</span>, <span class="literal">None</span>, <span class="string">&#x27;&#x27;</span>, [], &#123;&#125;</span><br><span class="line">以上转换为布尔值的<span class="literal">False</span>,其他情况都是<span class="literal">True</span></span><br><span class="line"></span><br><span class="line">其他:生活中数据存储的销户,很大概率并没有删除用户的数据,而是通过数据的唯一标识进行过滤掉,从而对外显示已删除</span><br></pre></td></tr></table></figure>

<h3 id="1-5-元组tuple"><a href="#1-5-元组tuple" class="headerlink" title="1.5 元组tuple"></a>1.5 元组tuple</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">作用:与列表几乎一致,内部可以存放多个元素(可以看成是不可变的列表)</span><br><span class="line">定义:用小括号括起来,存放多个元素,元素与元素之间逗号隔开,元素不支持修改</span><br><span class="line">eg:</span><br><span class="line">  t = (<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>)  </span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">type</span>(t))  <span class="comment"># &lt;class &#x27;tuple&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="1-6-集合set"><a href="#1-6-集合set" class="headerlink" title="1.6 集合set"></a>1.6 集合set</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">作用:去重和关系运算</span><br><span class="line">定义:用大括号括起来,内存可以存放多个元素,元素与元素之间逗号隔开,元素不是K:V键值对</span><br><span class="line">eg:</span><br><span class="line">  s = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>&#125;</span><br><span class="line">	<span class="built_in">print</span>(<span class="built_in">type</span>(s))  <span class="comment"># &lt;class &#x27;set&#x27;&gt;</span></span><br><span class="line">  </span><br><span class="line">定义空集合</span><br><span class="line">  s = <span class="built_in">set</span>()</span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">type</span>(s))  <span class="comment"># &lt;class &#x27;set&#x27;&gt;</span></span><br><span class="line">  </span><br><span class="line">默认情况下使用&#123;&#125;是空字典</span><br><span class="line">  s = &#123;&#125;</span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">type</span>(s))  <span class="comment"># &lt;class &#x27;dict&#x27;&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2、输入与输出"><a href="#2、输入与输出" class="headerlink" title="2、输入与输出"></a>2、输入与输出</h2><h3 id="2-1-输入"><a href="#2-1-输入" class="headerlink" title="2.1 输入"></a>2.1 输入</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">输入:程序接收用户输入的数据功能,使用内置函数<span class="built_in">input</span>()</span><br><span class="line">  <span class="built_in">input</span>()</span><br><span class="line">  	<span class="number">1.</span>接收到的任意输入的数据都会处理为字符串类型</span><br><span class="line">    <span class="number">2.</span>程序执行到<span class="built_in">input</span>时会等待输入数据才开始进行下一步操作</span><br><span class="line">eg: </span><br><span class="line">  username = <span class="built_in">input</span>(<span class="string">&quot;请输入你的名字:&quot;</span>)</span><br><span class="line">  age = <span class="built_in">input</span>(<span class="string">&quot;请输入你的年龄:&quot;</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">type</span>(username))		<span class="comment"># 查看username的数据类型</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">type</span>(age))  <span class="comment"># 查看age的数据类型</span></span><br><span class="line">  <span class="built_in">print</span>(username, age)  <span class="comment"># 将输入的数据进行打印</span></span><br><span class="line">  </span><br><span class="line">res:</span><br><span class="line">  请输入你的名字:tom  <span class="comment"># 输入的tom</span></span><br><span class="line">  请输入你的年龄:<span class="number">18</span>   <span class="comment"># 输入的18</span></span><br><span class="line">  &lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">str</span>&#x27;&gt;  # 显示<span class="title">username</span>的数据类型为<span class="title">str</span></span></span><br><span class="line"><span class="class">  &lt;<span class="title">class</span> &#x27;<span class="title">str</span>&#x27;&gt;  # 显示<span class="title">age</span>的数据类型也是<span class="title">str</span></span></span><br><span class="line"><span class="class">  <span class="title">tom</span> 18  # 输出结果与输入结果一致</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-输出"><a href="#2-2-输出" class="headerlink" title="2.2 输出"></a>2.2 输出</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">输出:程序输出内容给用户,内置函数<span class="built_in">print</span>()</span><br><span class="line">  <span class="built_in">print</span>()</span><br><span class="line">    <span class="number">1.</span>括号内可以使用逗号将多个元素一起打印</span><br><span class="line">    <span class="number">2.</span>自带end参数控制打印的排版</span><br><span class="line">    	eg:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;test&#x27;</span>, end=<span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">123</span>)</span><br><span class="line">      res:</span><br><span class="line">        test&amp;<span class="number">123</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-格式化输出"><a href="#2-3-格式化输出" class="headerlink" title="2.3 格式化输出"></a>2.3 格式化输出</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">格式化输出:将字符串中某些内容替换掉再输出就是格式化输出</span><br><span class="line"><span class="number">1.</span>先使用占位符 %s</span><br><span class="line"><span class="number">2.</span>再使用%按照位置进行替换</span><br><span class="line">eg:</span><br><span class="line">  res = <span class="string">&#x27;亲爱的%s你好！你%s月的话费是%s，余额是%s&#x27;</span></span><br><span class="line">	<span class="built_in">print</span>(res % (<span class="string">&#x27;jason&#x27;</span>, <span class="number">11</span>, <span class="number">100</span>, <span class="number">999</span>))</span><br><span class="line">	<span class="built_in">print</span>(res % (<span class="string">&#x27;tony&#x27;</span>, <span class="number">11</span>, <span class="number">200</span>, -<span class="number">100</span>))</span><br><span class="line">	<span class="built_in">print</span>(res % (<span class="string">&#x27;kevin&#x27;</span>, <span class="number">11</span>, <span class="number">500</span>, -<span class="number">999</span>))</span><br><span class="line">res:</span><br><span class="line">  亲爱的jason你好！你<span class="number">11</span>月的话费是<span class="number">100</span>，余额是<span class="number">999</span></span><br><span class="line">	亲爱的tony你好！你<span class="number">11</span>月的话费是<span class="number">200</span>，余额是-<span class="number">100</span></span><br><span class="line">	亲爱的kevin你好！你<span class="number">11</span>月的话费是<span class="number">500</span>，余额是-<span class="number">999</span></span><br><span class="line">  </span><br><span class="line">%d占位符只能给数字占位</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%08d&#x27;</span> % <span class="number">123</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%08d&#x27;</span> % <span class="number">6666666666666</span>)</span><br><span class="line"></span><br><span class="line">res:</span><br><span class="line">  00000123</span><br><span class="line">  <span class="number">6666666666666</span></span><br><span class="line"><span class="comment"># 08导致输出结果会保留8位,不足的用0补齐,超过的直接显示源数据</span></span><br></pre></td></tr></table></figure>

<h2 id="3、基本运算符"><a href="#3、基本运算符" class="headerlink" title="3、基本运算符"></a>3、基本运算符</h2><h3 id="3-1-算数运算符"><a href="#3-1-算数运算符" class="headerlink" title="3.1 算数运算符"></a>3.1 算数运算符</h3><p>a = 10 , b = 20</p>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td align="center">+</td>
<td align="center">两个对象相加</td>
<td>a + b 值为 30</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">得到负数或是一个数减去另一个数</td>
<td>a - b 值为 -10</td>
</tr>
<tr>
<td align="center">*</td>
<td align="center">两个数相乘或是返回一个被重复若干次的字符串</td>
<td>a * b 值为 200</td>
</tr>
<tr>
<td align="center">/</td>
<td align="center">x除以y</td>
<td>b / a 值为  2</td>
</tr>
<tr>
<td align="center">//</td>
<td align="center">取整除 - 返回商的整数部分（<strong>向下取整</strong>）</td>
<td>9 // 2 值为 4</td>
</tr>
<tr>
<td align="center">%</td>
<td align="center">取模,返回除法的余数</td>
<td>b % a 输出结果 0</td>
</tr>
<tr>
<td align="center">**</td>
<td align="center">返回x的y次幂</td>
<td>2 ** 3 值为8</td>
</tr>
</tbody></table>
<h3 id="3-2-比较运算符"><a href="#3-2-比较运算符" class="headerlink" title="3.2 比较运算符"></a>3.2 比较运算符</h3><table>
<thead>
<tr>
<th align="center">比较运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">==</td>
<td>等于,两边相等为True,否则返回False</td>
</tr>
<tr>
<td align="center">!=</td>
<td>不等于,两边不相等为True,否则返回False</td>
</tr>
<tr>
<td align="center">&gt;</td>
<td>大于</td>
</tr>
<tr>
<td align="center">&gt;=</td>
<td>大于等于</td>
</tr>
<tr>
<td align="center">&lt;</td>
<td>小于</td>
</tr>
<tr>
<td align="center">&lt;=</td>
<td>小于等于</td>
</tr>
</tbody></table>
<h3 id="3-3-赋值运算符"><a href="#3-3-赋值运算符" class="headerlink" title="3.3 赋值运算符"></a>3.3 赋值运算符</h3><h4 id="3-3-1-增量赋值"><a href="#3-3-1-增量赋值" class="headerlink" title="3.3.1 增量赋值"></a>3.3.1 增量赋值</h4><table>
<thead>
<tr>
<th>赋值运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>=</td>
<td>简单赋值运算</td>
<td>a = 10</td>
</tr>
<tr>
<td>+=</td>
<td>加法赋值运算</td>
<td>a +=1 相当于a = a+1</td>
</tr>
<tr>
<td>-=</td>
<td>减法赋值运算</td>
<td>a -= 1 相当于a = a-1</td>
</tr>
<tr>
<td>*=</td>
<td>乘法赋值运算</td>
<td></td>
</tr>
<tr>
<td>/=</td>
<td>除法赋值运算</td>
<td></td>
</tr>
<tr>
<td>//=</td>
<td>取整赋值运算</td>
<td></td>
</tr>
<tr>
<td>%=</td>
<td>取余赋值运算</td>
<td></td>
</tr>
<tr>
<td>**=</td>
<td>幂赋值运算</td>
<td></td>
</tr>
</tbody></table>
<h4 id="3-3-2-链式赋值"><a href="#3-3-2-链式赋值" class="headerlink" title="3.3.2 链式赋值"></a>3.3.2 链式赋值</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">可以把同一个值同时赋值个多个变量名</span><br><span class="line">eg:</span><br><span class="line">  a = <span class="number">10</span></span><br><span class="line">  b = a</span><br><span class="line">  c = b</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 链式赋值可以一行解决</span></span><br><span class="line">  a = b = c = <span class="number">10</span></span><br></pre></td></tr></table></figure>

<h4 id="3-3-3-交叉赋值"><a href="#3-3-3-交叉赋值" class="headerlink" title="3.3.3 交叉赋值"></a>3.3.3 交叉赋值</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">eg: </span><br><span class="line">  a = <span class="number">10</span></span><br><span class="line">  b = <span class="number">22</span></span><br><span class="line">  </span><br><span class="line">  需要a和b交换</span><br><span class="line">  方式<span class="number">1</span>:</span><br><span class="line"> 		tmp = a  <span class="comment"># 引入第三变量暂存a的值</span></span><br><span class="line">		a = b  <span class="comment"># 变量a指向变量b,此时a的值为22</span></span><br><span class="line">		b = tmp  <span class="comment"># 变量b指向tmp,此时b的值就是10，完成互换吧</span></span><br><span class="line">		<span class="built_in">print</span>(a, b)    </span><br><span class="line">  方式<span class="number">2</span>:</span><br><span class="line">    a, b = <span class="number">22</span>, <span class="number">10</span>  <span class="comment"># 简单粗暴</span></span><br></pre></td></tr></table></figure>

<h4 id="3-3-4-解压赋值"><a href="#3-3-4-解压赋值" class="headerlink" title="3.3.4 解压赋值"></a>3.3.4 解压赋值</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">将列表中的多个值取出来依次赋值给多个变量名</span><br><span class="line">eg:</span><br><span class="line">  eg_list = [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>]</span><br><span class="line">  a = eg_list[<span class="number">0</span>]</span><br><span class="line">  b = eg_list[<span class="number">1</span>]</span><br><span class="line">  c = eg_list[<span class="number">2</span>]</span><br><span class="line">  d = eg_list[<span class="number">3</span>]</span><br><span class="line">  <span class="built_in">print</span>(a, b, c, d,)  <span class="comment"># 输出为12 13 14 15</span></span><br><span class="line">  </span><br><span class="line">  解压赋值可以这样写:</span><br><span class="line">    a, b, c, d = eg_list</span><br><span class="line">    </span><br><span class="line">  解压赋值注意事项:</span><br><span class="line">    <span class="number">1.</span>等号左边的变量名格式化必须与右面包含的格式相同</span><br><span class="line">    <span class="number">2.</span>可以使用*_打破上述规则</span><br><span class="line">      eg:</span><br><span class="line">        a, *_, d = eg_list</span><br><span class="line">        <span class="built_in">print</span>(a, _, b)  <span class="comment"># 结果为 12 [13, 14] 15</span></span><br><span class="line">     说明:</span><br><span class="line">      * 可以接收多余的元素,组成列表赋值给后面的变量名</span><br><span class="line">      _ 作为单独变量名时,通常表达指向的值无用</span><br></pre></td></tr></table></figure>

<h3 id="3-4-逻辑运算符"><a href="#3-4-逻辑运算符" class="headerlink" title="3.4 逻辑运算符"></a>3.4 逻辑运算符</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">在python逻辑运算符就三个</span><br><span class="line"><span class="keyword">and</span>	与:</span><br><span class="line">	用于连接多个条件并且多个条件必须都成立才可以</span><br><span class="line"><span class="keyword">or</span>	或:</span><br><span class="line">	用于连接多个条件并且多个条件只要有一个成立即可</span><br><span class="line"><span class="keyword">not</span> 非:</span><br><span class="line">	取反</span><br><span class="line">  </span><br><span class="line"><span class="built_in">print</span>(<span class="number">2</span> &gt; <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span> != <span class="number">1</span> <span class="keyword">and</span> <span class="literal">True</span> <span class="keyword">and</span> <span class="number">3</span> &gt; <span class="number">2</span>)  <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">2</span> &gt; <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span> != <span class="number">1</span> <span class="keyword">or</span> <span class="literal">True</span> <span class="keyword">or</span> <span class="number">3</span> &gt; <span class="number">2</span>)  <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> <span class="literal">True</span>)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ps:三个连接符在混合使用的时候是有优先级的,但是我们在编写的时候应该人为的规定好优先级,()优先级最高</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
